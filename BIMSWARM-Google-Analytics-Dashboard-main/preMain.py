import jsonfrom datetime import datetimefrom operator import itemgetterimport pandas as pdfrom src import PostgreSQL, authorizefrom src.helperFunctions import datadef ptg():    ptgID = []    ptgName = []    Data = list(ptgData)    for index in range(len(Data)):        for key, value in Data[index].items():            ptgID.append(key)            ptgName.append(value)    return ptgID, ptgNamePostgreSQL.connect()f = open('database.json', 'r', encoding='utf-8')data = json.load(f)f = open('ptg.json', 'r', encoding='utf-8')ptgData = json.load(f)df = authorize.returnReport(authorize.getReport("2022-07-15", "yesterday", ""))df = df.set_index('Date')df.to_csv('./output/bimswarmMarketPlatz-stats.csv')dfReferal = authorize.returnReferalReport(authorize.getReferalReport("2022-07-15", "yesterday", ""))dfReferal.to_csv('./output/bimswarmMarketPlatz-stats2.csv')productID = ""df_Products = []df2_Products = []for j in range(len(data)):    for product in range(len(data[j]['products'])):        for key, value in data[j]['products'][product].items():            productDf = authorize.returnReport(authorize.getReport("2022-07-15", "yesterday", "productId=" + key ))            productDf2 = authorize.returnReferalReport(authorize.getReferalReport("2022-07-15", "yesterday","productId=" +key))            productDf['ProductID'] = key            productDf2['ProductID'] = key            productDf['Product'] = value            productDf2['Product'] = value            productDf['Supplier'] = data[j]['Supplier']            productDf2['Supplier'] = data[j]['Supplier']            productDf['OrgId'] = data[j]['OrgId']            productDf2['OrgId'] = data[j]['OrgId']            try:                df_Products.append(productDf)                df2_Products.append(productDf2)            except:                print("")df_Products = pd.concat(df_Products)df_Products.reset_index(inplace=True, drop=True)df2_Products = pd.concat(df2_Products)for index, i in df_Products.iterrows():    splitStr = i['pagePath'].split('&')    for j in splitStr:        if "productId=" + str(i['ProductID']) in j:            try:                value = j.split("productId=" + str(i['ProductID']))            except ValueError:                print("")            else:                if value[1] != '' and value[1] != '?tab=0':                    try:                        df_Products= df_Products.drop(index)                        break                    except ValueError:                        print("")df_Products.to_csv('./output/products-stats.csv')df2_Products.to_csv('./output/products-stats2.csv')minDate = '15-07-2022'maxDate = str(datetime.strftime(datetime.strptime(datetime.today().isoformat(),'%Y-%m-%dT%H:%M:%S.%f'), '%Y-%m-%d'))